L7AtvtMOwJ0sP9Qi

eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImtucWhud3p4eGRrZ3NiaHpqb2dlIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzM4NTE3MTEsImV4cCI6MjA0OTQyNzcxMX0.hS5zsv69lU18aytcte21NwvXi3jzyD2WyDa6lGUzN94

eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImtucWhud3p4eGRrZ3NiaHpqb2dlIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTczMzg1MTcxMSwiZXhwIjoyMDQ5NDI3NzExfQ.3x-anF7dAy6JXFGhQM8hjy4wG02Ry4cV2J2Xw7pkQ-4


h"https://s3-alpha-sig.figma.com/img/934c/8eaa/07a6b9eb2a8babdea056a3a7b1fc147f?Expires=1734912000&Key-Pair-Id=APKAQ4GOSFWCVNEHN3O4&Signature=gG1VNBA2dyrCdAAU8DjK1KO76BHrTDI4NZOSLYdfrVrSjSTXul5Wlvswt~WwrbQb7RaGfhopPbQFPjq6PkcNqEstca8W1qiNYTyNxr0S3wgb1WyHd2sPZy5-LZ1Nwg7dMGQq4Y5ALHIPBOr4uY0mRfHwYLM9fb6T4neAY8d7pbpZB6dKvdq9gafxOsBlE4Lygau11nhdwsQsOju4Qvdg7zkd7FwekwdY8~76IWwYHZ1JVY6trpBtjerrjjiCxWBewqgr4W0qpmeCkWZE5lIBenIq5bDKl1Q23T21FnrxlAkeXkirra6tnUvnVMs-0F10m191ceFy7UDx-xw7Ti0Pgw__",
    "https://s3-alpha-sig.figma.com/img/d73e/2214/4044975f305ca70914a520476023fd6d?Expires=1734912000&Key-Pair-Id=APKAQ4GOSFWCVNEHN3O4&Signature=SEwhVjfBZ-1AvCgfbnjpA4FbwXwXOjk~0jPQp0Y0pH2~nAHGtDELzHYU3z1VZcf~O1~ePbgOWVVn1Z5uP~o3ueL7NGcF7EoFD3wHuN99iwdzYZ84KlGLNR3Ei8-1lxxua0b6Rv2L8xlhFxNdeP-8UKd~QfQioBzR3tLYJEQQ-hShvOfTG-u2LPXtb1zpLbPyfMEHGE9vZat2~CvSEo3MSeHJ-d2-XYJQL~5NK0U~bj6SnAcesqz9r7ro~zmfbEU85BjcFD-2-rCy8ab5w3Jps0Vz~tJRG1Dq3gTm~wLlSWJZbfSLSlMaecuyct863x8gca2APVLuVanZy2xXNC1rSQ__",
    "https://s3-alpha-sig.figma.com/img/8dab/37bf/4ad4fac55b77a66d226aa1156db5e423?Expires=1734912000&Key-Pair-Id=APKAQ4GOSFWCVNEHN3O4&Signature=k5mvyZtzAC58tfDkrwaTTVOhY0zongn25A7fJb~DYoYssHXTe4EqNzOxervU0a1wE6~llbATZfq2rz1hlqmf-xDn2EdQxq3bxFEeaVf~vczEOCVWSija1l3zcknRIhb0H1haCRa4eKngybwFThELfVEzLfRLDs1EytBmLrllrU09ohJ9OHPhYrW7BNjU7q8zTT1PJuZR~sCOOF3BqXZGsLIfb2lQdkATTEUYI0aQeAQO18qdyx3MKsMsRh9Tc9T8A43T4EtUU3iyk2oX9Z37P6xMi5abDdxDMdRvTj60dtXD7Z3TnCW4BRgXMCx1t6jwgFKtHZcfSz9VVQIzvyho~Q__",
    "https://s3-alpha-sig.figma.com/img/6f23/0259/b80d2714580bb71cdcf2cf0a286abaf1?Expires=1734912000&Key-Pair-Id=APKAQ4GOSFWCVNEHN3O4&Signature=VrA9zQ8DkC32eZlNWdvEU34LhAJh20M4DsTueJDEo29JEDSGGUek1sIJRVbl-E-CH7aPKEXO6pzS-XzLb-ujWVQLCubgqqwi~r8vi3JDsrLyKO2d72Mw6feIth0up-Escnp49PmZnlZIaboAt5TDEPjP3dybnsVsZwMkBRsGWqYCA8yxzESrLiqynnlh2Fm6dJ~y3l41yUrc4MpaopTqs5u1OWhot4Z2ucqdxG-nYzeIB0rjX0Uw6sXjbDdI0ydzXW6nuHf3IQ30y1zcecV19Fg5tO3LD8FvgLmGstgMBWuvNzUmPsxaD59QlP~MXtFEOLTIPKVfxR93zPt2WkPBSw__",
    "https://s3-alpha-sig.figma.com/img/d105/932e/baf6a10056d518f2f660159c27891ae5?Expires=1734912000&Key-Pair-Id=APKAQ4GOSFWCVNEHN3O4&Signature=j2H6Zby92j5UDS-JjCl1IwpKAtm3IjDKOSO9xPDIjc0GZaZSjG28p~qww-9qCyTvBTRFMlam6-sa69zFsAjLn9ckFk95wAmfqx-YHx4J2D6IE2SGaRWpr5K3wPIDzMyxVdVry2-YrDpR0ABoHBOwlTcCnwmQbnOggXYS3yDH1qp7iKUDmW4wMwBT1zDX1ugWhYkAGTNyVM034UDYsTm1wjudHxku6CrcUOJ~1xO2Azn4vSP1mORiPg~5oSLi3uRP2unAKNbG8wv5fn14Z6TOqMOBV4PTjfIFTo6CbfED5tGGr7BfCed2L6DaWILil4q8Lo8E0~5KCitjK8-ci77KbA__",
    "https://s3-alpha-sig.figma.com/img/207b/1314/51e50ce0fbfb20da6e07033f69a9f3ea?Expires=1734912000&Key-Pair-Id=APKAQ4GOSFWCVNEHN3O4&Signature=MBaEuWr1wc7I7QYBb36w7-CljWvmSyIxE63M0zIebmGD4pka7x8FOI4iO8BSCDKvE~R2RQfYTd8BpcOnd1cdHkWJlbTdqi4acVF13htIWO9xK4q7GPpNLGo~9gRM4gybKzU3DEHm89VTzCAva7NuA0gdFtIyW0wqFlUjG47jr-l2OpY85ATPjFRkPSE4qzuXQY6XPljzNOVsfo13Fs23oN8a7cHvTWEWayUbaaW91u50AYsbvJJJjAyz4fKI7SVg1VIaU7EH3e3OC01lYRT3VlRNoAlA4osZKAUd-vZkoP9a1DkqrjG3RVR6AHum61VMLlWCpzTlK6fr2gVJLaYA0A__",
    "https://s3-alpha-sig.figma.com/img/1d12/d5f5/034e1a60724e3533eb0244bb6ebd4d5c?Expires=1734912000&Key-Pair-Id=APKAQ4GOSFWCVNEHN3O4&Signature=LfKoZsGM2mpK0VPdEXCEhKFJiqimRMaJlniMpSZ5dez-s2se~gXCm6CsGxzVV7CvN~DbtWn1YyqbU1pbp1yKh3LZrBkwk5WNuwVijFsOztKqO2kUsK8UARr8Ek0eomWRVnTvpPYR4AuKYiRGx~x7E26Dktmo8pKkP6pcuQ7VwEJJ2oHNEyGbVWcZi9ByP-Glxswkmxf8x-tiTpoeX~BNaImdlx8X~YAaVqAlyNyqAd9MCJGNF2JZynaIxMQAXUTi7N54leqEySpYi9GPdeiAACyJvXxVjrCOB5VI4IG1v~eXo-Rry1Gmghxm42oSZPdDnMC-dme4F4EUecFHVWvqag__",
    "https://s3-alpha-sig.figma.com/img/43a1/be88/fe922fec80f9bd747fbe931d0ac5bcdc?Expires=1734912000&Key-Pair-Id=APKAQ4GOSFWCVNEHN3O4&Signature=iM~QWiOMPspG9Rjfu5~ZU9YLfhaVLTnkPzXXegulRRvbl5fHoSxKh-P8GhKaZwX5d4FLxJi3PW9kg8gGgHvJjKKQosAkqexR7Apnupodt1VokiUwkFx3U14P7B2H3PVgz2vz6~pc74~EV9tlwGbE8PE2XBmTgJh422X2~UVtIzDyZpxiHLtkzWDV1IzLp~sdgogSs8prho42v3L-LWuxRREFcJF1An~BlrELghX60rrM95veT~QVJwl2uu8gcHolZx7OWlg~GfYRxnGglhK3YoKtCXUiTBRzUkqtIzHgs7B8PPaMnlX4O7VmqJosmIHwmOZxQ2lIC4F7TAx7JLuXLg__",
    "https://s3-alpha-sig.figma.com/img/7ce7/facf/669dc0383b4fe8e47fdc768f7968602b?Expires=1734912000&Key-Pair-Id=APKAQ4GOSFWCVNEHN3O4&Signature=pa7t9hCHQ0J2xdnEJTKRDt-oBRzFK8vQu2BQM0nva9SoarC65rWt~wIEm3g52892U7SKuBmOizz-9kPbW1Gnj5vdmZanyObksEhxeH~5cgVXwPi~jDpNdhE9T79USakGq8s4gMlozyD1fPZaPIBnbL1Pcc-h2sK9TAfZijtOy3-tjQBUpqE8VBp0QH-atti3LaZ5O4~8Gx5ZldeBGaR-O65v5MOHAOeVYN-ugXd2lQOUtiFu8Oooceer7PvB5YnRZ2KgfxFxlAbh2Y5n5W62F8hGwEUsoL7oofShWz9jxfBb8zgodHUgWB1UReDuLNPfBcZEJDPkul9wnGgot1D1kg__",
  

  https://s3-alpha-sig.figma.com/img/e588/3ae0/261c0b95b3d799ea23271ef18084f911?Expires=1734912000&Key-Pair-Id=APKAQ4GOSFWCVNEHN3O4&Signature=Ro97CzrY1-xXAkdAkDnEOVx0tKagq7W2ADpM15gZ1QOPtDnU29AXGYvfbDDrklbMp8DoeEgQWeqKo3jAw-IpDrI~IZCetw-42e06AiWgM7fFouaaHpyWp4CpqZ4uAtJMmgNP770y652TlCGXZrT0Ld5Gia-ZDSj2QWLgqbj9uHwPEHGK9a1ruXZ6Hz84poJRdYvh3iKmguBDCG3PONGKgdYSrK669uu8pLJqMdVmVtVqv9vnxHxRuSBelqL7m2ghelPKWDFbbdh2vBeQJS7dGwq-GMHCGXUkvEOOGi9XmZr2ZOpFPLHea0DTBbnouhtseaDC-c-6BTGuHuxaUTSHcQ__
  
          <img src="https://banner2.cleanpng.com/20171216/dbb/av2e6z0my.webp"/>Continue with Google</button>

<div className="feed">
        <h2>Feed</h2>
        {posts.length > 0 ? (
          posts.map((post, index) => (
            <div key={index} className="post">
              <div className="post-header">
                <img src={post.userProfile} alt="User" className="user-icon" />
                <div className="post-info">
                  <h3>{post.username}</h3>
                  <p>{new Date(post.timestamp.seconds * 1000).toLocaleString()}</p>
                </div>
              </div>
              <p>{post.text}</p>
              <div className="post-images">
                {post.images.map((img, index) => (
                  <img key={index} src={img} alt={`Post image ${index}`} className="post-image" />
                ))}
              </div>
            </div>
          ))
        ) : (
          <p>No posts yet!</p>
        )}
      </div>


echo "# SnapStory" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/geetaanjalishah/SnapStory.git
git push -u origin main

git remote add origin https://github.com/geetaanjalishah/SnapStory.git
git branch -M main
git push -u origin main




import { useNavigate } from "react-router-dom";
import Cookies from "universal-cookie";
import { useEffect, useState } from "react";
import { getAuth } from "firebase/auth";
import { doc, collection, query, onSnapshot, getDoc } from "firebase/firestore"; // Fixed imports
import { db } from "../firebase";
import FloatingButton from "./FloatingButton";
import Share from "./Share";
import FloatingLogoutButton from "./FloatingLogoutButton";
import BackButton from "./BackButton";

const cookies = new Cookies();

const Home = () => {
  const navigate = useNavigate();
  const [user, setUser] = useState(null);
  const [gallery, setGallery] = useState([]);
  const [posts, setPosts] = useState([]);
  const [intro, setIntro] = useState(""); // Added state for intro

  useEffect(() => {
    const token = cookies.get("auth-token");
    if (!token) {
      navigate("/");
      return;
    }

    const auth = getAuth();
    const currentUser = auth.currentUser;

    if (currentUser) {
      setUser({
        displayName: currentUser.displayName,
        email: currentUser.email,
        profile: currentUser.photoURL,
      });
      fetchGalleryImages(currentUser.uid);
      fetchUserPosts(currentUser.uid);
      fetchUserData(currentUser.uid); // Fetch user's intro or other data
    }
  }, [navigate]);

  const fetchGalleryImages = (uid) => {
    const imagesRef = collection(db, `users/${uid}/gallery`);
    return onSnapshot(
      imagesRef,
      (snapshot) => {
        const images = snapshot.docs.map((doc) => doc.data().url);
        setGallery(images);
      },
      (error) => {
        console.error("Error fetching gallery images:", error);
      }
    );
  };

  const fetchUserPosts = (uid) => {
    const postsRef = collection(db, "posts");
    return onSnapshot(
      postsRef,
      (snapshot) => {
        const userPosts = snapshot.docs.map((doc) => doc.data());
        setPosts(userPosts);
      },
      (error) => {
        console.error("Error fetching posts:", error);
      }
    );
  };

  const fetchUserData = async (uid) => {
    try {
      const userDoc = doc(db, "users", uid);
      const snapshot = await getDoc(userDoc);
      if (snapshot.exists()) {
        const data = snapshot.data();
        setIntro(data.intro || "No intro provided.");
      }
    } catch (error) {
      console.error("Error fetching user data:", error);
    }
  };

  const goToProfile = () => {
    navigate("/profile");
  };

  const generateRandomGradient = () => {
    const getLightColor = () => {
      const r = Math.floor(Math.random() * 128) + 127; // Light red (between 127 and 255)
      const g = Math.floor(Math.random() * 128) + 127; // Light green (between 127 and 255)
      const b = Math.floor(Math.random() * 128) + 127; // Light blue (between 127 and 255)
      return `rgb(${r}, ${g}, ${b})`;
    };

    const color1 = getLightColor();
    const color2 = getLightColor();

    return `linear-gradient(135deg, ${color1}, ${color2})`;
  };

  return (
    <div className="home">
    <FloatingLogoutButton />
    <div>
    <BackButton /></div>
      {user ? (
        <>
          <div className="intro1" onClick={goToProfile}>
            <div className="flex">
              {user.profile && (
                <img src={user.profile} className="profile-img" alt="Profile" />
              )}
              <div className="greeting-container">
                <div className="greeting">Welcome Back,</div>
                <div className="name">
                  {user?.displayName || "Anonymous User"}
                </div>
              </div>
            </div>
          </div>

          {/* Feed Section */}
            <div className="feed">
              <div className="feeds">Feeds</div>

              <div className="col-12 flex">
              <div className="col-3"></div>

              <div className="col-6">
              {posts.length > 0 ? (
                posts.map((post, index) => (
                  <div
                    key={index}
                    className="post card"
                    style={{ background: generateRandomGradient() }}
                  >
                  <div className="col-12 flex">
                  <div className="col-2"></div>
                  <div className="col-8">
                  <div className="card-content">
                  <div className="post-header row valign-wrapper">
                    <div className="col s2">
                      {user.profile ? (
                        <img
                          src={user.profile}
                          alt="Profile"
                          className="profile-icon-1"
                        />
                      ) : (
                        <p>No Profile Image</p>
                      )}
                    </div>
                    <div className="post-info col s10">
                      <h5 className="username">
                        {user?.displayName || "Anonymous User"}
                      </h5>
                      <p className="#424242-text">
                        {post.timestamp
                          ? new Date(post.timestamp.seconds * 1000).toLocaleString()
                          : "Unknown Date"}
                      </p>
                    </div>
                  </div>
                  <p className="post-text">{post.text}</p>
                  {post.images?.length > 0 && (
                    <div className="post-images">
                      {post.images.map((img, index) => (
                        <img
                          key={index}
                          src={img}
                          alt={`Post image ${index}`}
                          className="post-image responsive-img"
                        />
                      ))}
                    </div>
                  )}
                  <div className="share-container">
                    <Share url={window.location.href} title={post.title} description={post.text} />
                  </div>
                </div>
                  </div>
                  <div className="col-2"></div>
                  </div>
                 
                
                  </div>
                ))
              ) : (
                <p>No posts yet!</p>
              )}
              </div>
              <div className="col-3"></div>
              </div>
              

            </div>
          

          <div className="plus-btn">
            <FloatingButton />
          </div>
        </>
      ) : (
        <p>Loading...</p>
      )}
    </div>
  );
};

export default Home;
